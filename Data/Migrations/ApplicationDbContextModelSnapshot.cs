// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VitalisAPI.Data;

#nullable disable

namespace VitalisAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VitalisAPI.Entities.Models.DoctorModel", b =>
                {
                    b.Property<Guid>("Identify")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CL_PK_IDENTIFY");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("CL_CRM");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CL_SPECIALTY");

                    b.HasKey("Identify");

                    b.ToTable("TB_DOCTOR");
                });

            modelBuilder.Entity("VitalisAPI.Entities.Models.DoctorModel", b =>
                {
                    b.OwnsOne("VitalisAPI.Entities.Models.AddressModel", "Address", b1 =>
                        {
                            b1.Property<Guid>("DoctorModelIdentify")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AdditionalAddress")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CL_ADDITIONAL_ADDRESS");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CL_ADDRESS");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CL_CITY");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CL_DISTRICT");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CL_NUMBER");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CL_STATE");

                            b1.Property<string>("UnitFederative")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CL_UNIT_FEDERATIVE");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("nvarchar(9)")
                                .HasColumnName("CL_ZIP_CODE");

                            b1.HasKey("DoctorModelIdentify");

                            b1.ToTable("TB_DOCTOR");

                            b1.WithOwner()
                                .HasForeignKey("DoctorModelIdentify");
                        });

                    b.OwnsOne("VitalisAPI.Entities.Models.PersonModel", "Person", b1 =>
                        {
                            b1.Property<Guid>("DoctorModelIdentify")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CL_EMAIL_ADDRESS");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)")
                                .HasColumnName("CL_FIRST_NAME");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(180)
                                .HasColumnType("nvarchar(180)")
                                .HasColumnName("CL_LAST_NAME");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CL_PHONE_NUMBER");

                            b1.HasKey("DoctorModelIdentify");

                            b1.ToTable("TB_DOCTOR");

                            b1.WithOwner()
                                .HasForeignKey("DoctorModelIdentify");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Person")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
